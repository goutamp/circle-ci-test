---
version: 2

# steps in common
install_cleanup: &install_cleanup
  name: Install dependencies for cleanup job
  command: |
    pip install docker-compose awscli
install_dependencies: &install_dependencies
  name: Install dependencies
  command: |
    apk add --no-cache py-pip
    pip install awscli

#jobs steps
jobs:
  sts:
    docker:
      - image: governmentpaas/awscli
    steps:
      - run: apk add --no-cache git
      - checkout
      - run: mkdir -p /workspace/.aws
      - run:
          name: Create AWS config file with temp credentials
          command: |
            export AWS_ACCESS_KEY_ID=$IAM_ID
            export AWS_SECRET_ACCESS_KEY=$IAM_KEY
      - run:
          name: Calculate Terraform workspace from current branch
          command: |
            BRANCH_STEM=${CIRCLE_BRANCH/\/*//}
            ENVIRONMENT=$(echo -e 'feature-dms fmdev\ndevelop testing\nrelease/ uat\nplay-env/ play\npreprod/ preprod\nmaster production' | awk -vX=$BRANCH_STEM '$1 == X { print $2 }')
            echo "ENVIRONMENT=${ENVIRONMENT:-feature}" > /workspace/.env
            echo "Terraform environment is now ${ENVIRONMENT}"
      - persist_to_workspace:
          root: /workspace
          paths:
            - .aws/credentials
            - .env

  infra_plan:
    docker:
      - image: hashicorp/terraform:0.12.18
    steps:
      - checkout
      - attach_workspace:
          at: ~/
      - run:
          name: Init
          command: |
            . ~/.env
            #cp terraform_modules_v12/aws.tf ./terraform_modules_v12/sub_modules/vpc
            terraform init -backend=false ./adfs-test
      - run:
          name: Set workspace
          command: |
            . ~/.env
            #terraform workspace new $ENVIRONMENT ./terraform/ || true
            #terraform workspace select $ENVIRONMENT ./terraform/
      - run:
          name: Validate
          command: |
            terraform validate ./adfs-test
            ls -larth ./adfs-test
            #ls -larth terraform/env*
            #terraform state list -state=terraform/bliss
            #exit 0
      - run:
          name: Plan
          command: |
            . ~/.env
            #terraform plan -var-file="./terraform/environments/${ENVIRONMENT}.tfvars" ./terraform/

  cleanup:
    docker:
      - image: python:2
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: ~/
      - run: *install_cleanup
      - run:
          name: install from cli
          command: |
            . ~/.env
            python --version
            #python readfromfileandeachcmd.py aws_commands.txt

workflows:
  version: 2
  build:
    jobs:
      - sts
      - cleanup:
          requires:
            - sts
          filters:
            branches:
              only:
                - master

      - infra_plan:
          requires:
            - sts
          filters:
            branches:
              only:
                - master
